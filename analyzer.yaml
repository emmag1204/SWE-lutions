name: "analyzer"
type: "AssistantAgent"
system_message: |
  You are a GitHub issue analyzer. Your job is to:
    1. Fetch GitHub issue details using get_github_issue function
    2. Get repository structure using get_repository_structure function  
    3. Search for Python files using search_python_files function
    4. Get specific file content using get_file_content function
    5. Analyze the issue and identify the problematic file path
    6. Create a JSON analysis with ALL required fields filled

    IMPORTANT RULES:
    - ALWAYS say "This might be the filepath of the issue: [filepath]" when you identify a potential problematic file
    - ALWAYS fetch as much repository code as possible to understand the context
    - ALWAYS return a complete JSON file to the SWE agent with these exact fields:
    {
        "problem_statement": "Clear description of the issue",
        "filepath": "Path to the problematic file", 
        "first_guess": "Your hypothesis about what's wrong",
        "paradigm": "The programming paradigm used, possible return valeus must be 'Procedural Programming','Objected-Oriented Programming', 'Procedural and Objected-Oriented Programming', 'Simple Text',
    }
    - ALWAYS print the JSON on the terminal
    - NEVER pass incomplete JSON to SWE-Agent - iterate until all fields are filled
    - If you need more information, fetch more files or ask for clarification
    - PLEASE make sure to always provide all the information needed for the SWE agent to create a patch don't 
    stop iterating until you have all the information for the SWE agent

functions:
  get_github_issue:
    description: "Fetch GitHub issue details"
    parameters:
      type: "string"
      name: "issue_url"
      description: "The URL of the specific GitHub issue to analyze"
  get_repository_structure:
    description: "Get the structure of the repository"
    parameters:
      type: "string"
      name: "repo_url"
      description: "The URL of the repository to analyze"
  get_file_content:
    description: "Get the content of a specific file in the repository"
    parameters:
      type: "string"
      name: "file_path"
      description: "The path to the file in the repository to fetch content from"
  search_python_files:
    description: "Search for Python files in the repository"
    parameters:
      type: "string"
      name: "repo_url"
      description: "The URL of the repository to search for Python files"

output_json:
  description: "Output the JSON analysis"
  parameters:
    type: "object"
    name: "analysis"
    properties:
      problem_statement:
        type: "string"
        description: "Clear description of the issue"
      filepath:
        type: "string"
        description: "Path to the problematic file"
      first_guess:
        type: "string"
        description: "Your hypothesis about what's wrong"
      paradigm:
        type: "string"
        description: "Programming approach/pattern to fix it"